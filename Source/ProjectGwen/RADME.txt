So essentially until further notice all readme files are expected to be in .txt
meaning they should be openable via notepad or IDEs.  Hence we assume auto text
wrapping is not a thing and must manually add our own endline characters (enter key)
to make things more readable.  Thusly decided by Koi who is willing to change these
files to a different format manually (into something like rich text document) if
desired.

Inside each folder of importance will be a README.txt file explaining the purpose,
usage, and structure of everything within said folder for documentation.  Feedback
and edits is always welcome.  Github will show who gets credit for what anyway.

Programming/blueprint questions can be asked in Tech-Support or Engineering
and I (Koi) am more than willing to give one on one attention to anyone who wants
or needs it.

#TO PROGRAMMERS

RULES:
*Try to commit changes to github in small chunks, ideally so that a description
you give is within a single statement.  This can't always be done but should
be strived for within reason.
*If you can easily apply unit tests to the things you are making then you should
do so within reason.  We should keep them for debugging changes later on!
*Not everything should be OOP nor procedural nor whatever else, just stay
consistent within a given API for whatever module you're working on within reason.
*Be willing to confront one another over disagreements respectfully.
*Try to keep code as clean as reasonably possible
    -Clean code = less dev time spent, to go fast is to go well!
*If you feel these rules are awful complain to Koi about it.

P.S.
I (Koi) am not averted to editing code anywhere within a codebase regardless
who's responsible for it.  And you are extremely welcome to do the same to mine.
And if the need arises later on we'll treaty a syntax design doc.

A lot of these game ideas we are debating on seem to require a solid foundation
to achieve so while fast prototyping is ok in some contexts we want to try and permit
extendable code with a hopefully clean API.